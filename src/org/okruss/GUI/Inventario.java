/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.okruss.GUI;

import com.mysql.jdbc.Connection;
import java.awt.AWTException;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.MenuItem;
import java.awt.Panel;
import java.awt.PopupMenu;
import java.awt.SystemTray;
import java.awt.TrayIcon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.plaf.metal.MetalIconFactory;
import javax.swing.table.DefaultTableModel;
import org.okruss.CNC.classes.NumeroLetra;
import org.okruss.CNC.classes.conex;
import org.okruss.CNC.classes.file_browser;
import org.okruss.CNC.classes.reportes;

/**
 *
 * @author Okruss
 */
public class Inventario extends javax.swing.JFrame {
    conex cone = new conex();
    reportes report= new reportes();
    file_browser fl = new file_browser();
    Connection con;
    Statement stmt = null;
    /**
     * Creates new form Inventario
     * 
     */
    private static PopupMenu createPopupMenu() throws HeadlessException {
      PopupMenu menu = new PopupMenu();

      MenuItem exit = new MenuItem("Exit");
      exit.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e) {
            System.exit(0);
         }
      });
      menu.add(exit);

      return menu;
   }
 private static Image getImage() throws HeadlessException {
      Icon defaultIcon = MetalIconFactory.getTreeHardDriveIcon();
      Image img = new BufferedImage(defaultIcon.getIconWidth(), 
            defaultIcon.getIconHeight(), BufferedImage.TYPE_4BYTE_ABGR);
      defaultIcon.paintIcon(new Panel(), img.getGraphics(), 0, 0);

      return img;
   }
 public static void sys(String as) throws AWTException
 {
     
     TrayIcon icon = new TrayIcon(getImage(), "Java application as a tray icon", 
            createPopupMenu());
      icon.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e) {
            JOptionPane.showMessageDialog(null, "Tenemos contratos pendientes.");
         }


      });
      SystemTray.getSystemTray().add(icon);

    try {
        System.out.println("duermo 5 segundos");
        Thread.sleep(5000);
    } catch (InterruptedException ex) {
        Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
    }
       

        final javax.swing.SwingWorker worker;
        worker = new javax.swing.SwingWorker() {
            
            @Override
            protected Void doInBackground() throws Exception {

                try
                {
                    icon.displayMessage("Atención!", "Contratos pendientes:\n"+as, 
                    TrayIcon.MessageType.WARNING);
                }
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null,"Error:"+e.getMessage());
                    e.printStackTrace();
                }
                                
                return null;
            }

            @Override
            protected void done() {
            }
        };
        worker.execute();
//      icon.displayMessage("Hey!", "Contratos pendientes!", 
//            TrayIcon.MessageType.WARNING);
   }
    
    
    public Inventario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        pop = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaPaque = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        jScrollPane10 = new javax.swing.JScrollPane();
        tablaInsu = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        penFol = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        penDet = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        historial = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        folio = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        pop.setText("Corregir Registro");
        pop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popActionPerformed(evt);
            }
        });
        jPopupMenu1.add(pop);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DEPARTAMENTO DE CREDITO - CNC");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DEPARTAMENTO DE INVENTARIO");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PAQUETE TECNOLÓGICO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(482, 104));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/okruss/CNC/imgs/add_lab.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/okruss/CNC/imgs/trash_lab.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablaPaque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Labor", "Costo Unit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaPaque.setSelectionBackground(new java.awt.Color(102, 204, 0));
        tablaPaque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPaqueMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tablaPaque);

        jScrollPane6.setViewportView(jScrollPane5);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INSUMOS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel10.setPreferredSize(new java.awt.Dimension(482, 104));

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/okruss/CNC/imgs/add_lab.png"))); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/okruss/CNC/imgs/trash_lab.png"))); // NOI18N
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton11)
                    .addComponent(jButton9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablaInsu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tipo", "Descripción", "Costo Unit", "Cant Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaInsu.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tablaInsu.setSelectionBackground(new java.awt.Color(102, 204, 0));
        tablaInsu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaInsuMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(tablaInsu);

        jScrollPane9.setViewportView(jScrollPane10);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ENTREGAS PENDIENTES", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        penFol.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FOLIO", "NOMBRE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        penFol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                penFolMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(penFol);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DETALLES", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        penDet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "INSUMO", "CANTIDAD", "ESTATUS", "EMISIÓN", "ENTREGA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        penDet.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(penDet);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/okruss/CNC/imgs/checked.png"))); // NOI18N
        jButton1.setText("ENTREGADO");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "HISTORIAL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        historial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "FOLIO", "NOMBRE", "INSUMO", "CANTIDAD", "ESTATUS", "EMISIÓN", "ENTREGA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(historial);

        jLabel2.setText("FOLIO:");

        folio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                folioKeyTyped(evt);
            }
        });

        jLabel3.setText("NOMBRE:");

        nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombreKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(folio, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(folio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
 final javax.swing.SwingWorker worker;
        worker = new javax.swing.SwingWorker() {
            
            @Override
            protected Void doInBackground() throws Exception 
		{
                try
                {
//                    Thread.sleep(3000);
                    stmt=cone.conexion();
                    stmt.getConnection();
                    stmt.executeUpdate("use credito");

                    ResultSet rs8=stmt.executeQuery("Select * from labs");

                    ResultSetMetaData mD = rs8.getMetaData();
                    int ncol=mD.getColumnCount();
                    Object label [] = new Object [ncol];
                    for (int i=0;i<ncol;i++)
                    {
                        label[i]=mD.getColumnLabel(i+1);
                    }

                    DefaultTableModel modelo = (DefaultTableModel) tablaPaque.getModel();
                    modelo.setRowCount(0);
                    //modelo.setColumnIdentifiers(label);
                    while(rs8.next())
                    {
                        Object [] fila = new Object [ncol];
                        for (int i=0;i<ncol;i++)
                        {
                            fila[i]=rs8.getObject(i+1);
                        }
                        modelo.addRow(fila);
                    }
                }              
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null,"Error:"+e.getMessage());
                    e.printStackTrace();
                }
                
                try
                {
                    stmt=cone.conexion();
                    stmt.getConnection();
                    stmt.executeUpdate("use credito");

                    ResultSet rs3=stmt.executeQuery("Select * from ins");

                    ResultSetMetaData mD = rs3.getMetaData();
                    int ncol=mD.getColumnCount();
                    Object label [] = new Object [ncol];
                    for (int i=0;i<ncol;i++)
                    {
                        label[i]=mD.getColumnLabel(i+1);
                    }

                    DefaultTableModel modelo = (DefaultTableModel) tablaInsu.getModel();
                    modelo.setRowCount(0);
                    //modelo.setColumnIdentifiers(label);
                    while(rs3.next())
                    {
                        Object [] fila = new Object [ncol];
                        for (int i=0;i<ncol;i++)
                        {
                            fila[i]=rs3.getObject(i+1);
                        }
                        modelo.addRow(fila);
                    }
                }              
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null,"Error:"+e.getMessage());
                    e.printStackTrace();
                }
                
                //CONSULTO LOS POSIBLES FOLIOS PÉNDIENTES
                try
                {
                    stmt=cone.conexion();
                    stmt.getConnection();
                    stmt.executeUpdate("use credito");

                    ResultSet rs3=stmt.executeQuery("Select folio,nombre from alertinsumos where estatus='PENDIENTE' group by folio");

                    ResultSetMetaData mD = rs3.getMetaData();
                    int ncol=mD.getColumnCount();
                    Object label [] = new Object [ncol];
                    for (int i=0;i<ncol;i++)
                    {
                        label[i]=mD.getColumnLabel(i+1);
                    }

                    DefaultTableModel modelo = (DefaultTableModel) penFol.getModel();
                    modelo.setRowCount(0);
                    //modelo.setColumnIdentifiers(label);
                    while(rs3.next())
                    {
                        Object [] fila = new Object [ncol];
                        for (int i=0;i<ncol;i++)
                        {
                            fila[i]=rs3.getObject(i+1);
                        }
                        modelo.addRow(fila);
                    }
                }              
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null,"Error:"+e.getMessage());
                    e.printStackTrace();
                }
                
                try
                {
                    stmt=cone.conexion();
                    stmt.getConnection();
                    stmt.executeUpdate("use credito");

                    ResultSet rs3=stmt.executeQuery("Select * from alertinsumos");

                    ResultSetMetaData mD = rs3.getMetaData();
                    int ncol=mD.getColumnCount();
                    Object label [] = new Object [ncol];
                    for (int i=0;i<ncol;i++)
                    {
                        label[i]=mD.getColumnLabel(i+1);
                    }

                    DefaultTableModel modelo = (DefaultTableModel) tablaInsu.getModel();
                    modelo.setRowCount(0);
                    //modelo.setColumnIdentifiers(label);
                    while(rs3.next())
                    {
                        Object [] fila = new Object [ncol];
                        for (int i=0;i<ncol;i++)
                        {
                            fila[i]=rs3.getObject(i+1);
                        }
                        modelo.addRow(fila);
                    }
                }              
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null,"Error:"+e.getMessage());
                    e.printStackTrace();
                }
                    return null;
		}

            @Override
            protected void done() {

            }
        };
        worker.execute();
    }//GEN-LAST:event_formWindowOpened

    private void popActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_popActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //agregar labor
        final javax.swing.SwingWorker worker;
        worker = new javax.swing.SwingWorker() {

            @Override
            protected Void doInBackground() throws Exception {
                try
                {

                    String lab="", labor="";
                    Double cost=0.0, superf=0.0, tot=0.0, precio=0.0;

                    labor=JOptionPane.showInputDialog(null,"Labor: ", "Labores",JOptionPane.QUESTION_MESSAGE);
                    precio=Double.parseDouble(JOptionPane.showInputDialog(null,"Costo: ", "Precio",JOptionPane.QUESTION_MESSAGE));

                    stmt=(Statement) cone.conexion();
                    stmt.getConnection();
                    stmt.executeUpdate("use credito");
                    stmt.executeUpdate("insert into labs values('"+labor+"',"+precio+")");
                    JOptionPane.showMessageDialog(null,"Labor Creada");
                }
                catch(Exception e)
                {
                    System.out.println("Error: "+e.getMessage());
                }

                return null;

            }

            @Override
            protected void done() {

            }
        };
        worker.execute();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Eliminar Labor SELECCIONADA
        String lab="";
        lab=tablaPaque.getValueAt(tablaPaque.getSelectedRow(),0).toString();
        System.out.println(""+lab);
        try
        {
            stmt=(Statement) cone.conexion();
            stmt.getConnection();
            stmt.executeUpdate("use credito");
            stmt.executeUpdate("delete from labs where descrip='"+lab+"'");
            JOptionPane.showMessageDialog(null,"Labor Eliminada.");
        }
        catch(Exception e)
        {
            System.out.println("Error: "+e.getMessage());
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void tablaPaqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPaqueMouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_tablaPaqueMouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        final javax.swing.SwingWorker worker;
        worker = new javax.swing.SwingWorker() {

            @Override
            protected Void doInBackground() throws Exception {
                try
                {

                    String lab="", labor="";
                    Double cost=0.0, superf=0.0, tot=0.0, precio=0.0;

                    labor=JOptionPane.showInputDialog(null,"Insumo: ", "Insumo",JOptionPane.QUESTION_MESSAGE);
                    precio=Double.parseDouble(JOptionPane.showInputDialog(null,"Costo: ", "Precio",JOptionPane.QUESTION_MESSAGE));
                    String tip=JOptionPane.showInputDialog(null,"FERT/HERB: ", "TIPO",JOptionPane.QUESTION_MESSAGE);

                    stmt=(Statement) cone.conexion();
                    stmt.getConnection();
                    stmt.executeUpdate("use credito");
                    stmt.executeUpdate("insert into ins(tipo,descrip,motoUnit) values('"+tip+"','"+labor+"',"+precio+")");
                    JOptionPane.showMessageDialog(null,"Insumo Creado");
                }
                catch(Exception e)
                {
                    System.out.println("Error: "+e.getMessage());
                }

                return null;

            }

            @Override
            protected void done() {

            }
        };
        worker.execute();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        String lab="";
        lab=tablaInsu.getValueAt(tablaInsu.getSelectedRow(),1).toString();
        System.out.println(""+lab);
        try
        {
            stmt=(Statement) cone.conexion();
            stmt.getConnection();
            stmt.executeUpdate("use credito");
            stmt.executeUpdate("delete from ins where descrip='"+lab+"'");
            JOptionPane.showMessageDialog(null,"Insu Eliminado.");
        }
        catch(Exception e)
        {
            System.out.println("Error: "+e.getMessage());
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void tablaInsuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaInsuMouseClicked
        // TODO add your handling code here:
     if(evt.getClickCount()==2)
     {
         int cant=0;
         String producto=tablaInsu.getValueAt(tablaInsu.getSelectedRow(),1).toString();
         cant=Integer.parseInt(JOptionPane.showInputDialog(null,"Cantidad:",producto,JOptionPane.QUESTION_MESSAGE ));
         System.out.println(""+producto+" "+cant);
         stmt=(Statement) cone.conexion();
         try {
             stmt.getConnection();
             stmt.executeUpdate("use credito");
            stmt.executeUpdate("update ins set cant="+cant+" where descrip='"+producto+"'");
            try
                {
                    stmt=cone.conexion();
                    stmt.getConnection();
                    stmt.executeUpdate("use credito");

                    ResultSet rs3=stmt.executeQuery("Select * from ins");

                    ResultSetMetaData mD = rs3.getMetaData();
                    int ncol=mD.getColumnCount();
                    Object label [] = new Object [ncol];
                    for (int i=0;i<ncol;i++)
                    {
                        label[i]=mD.getColumnLabel(i+1);
                    }

                    DefaultTableModel modelo = (DefaultTableModel) tablaInsu.getModel();
                    modelo.setRowCount(0);
                    //modelo.setColumnIdentifiers(label);
                    while(rs3.next())
                    {
                        Object [] fila = new Object [ncol];
                        for (int i=0;i<ncol;i++)
                        {
                            fila[i]=rs3.getObject(i+1);
                        }
                        modelo.addRow(fila);
                    }
                }              
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null,"Error:"+e.getMessage());
                    e.printStackTrace();
                }
            JOptionPane.showMessageDialog(null,"Stock de "+producto+" actualizado.");
         } catch (SQLException ex) {
             Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
         }
            
     }
    }//GEN-LAST:event_tablaInsuMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
         try
                {
                    stmt=cone.conexion();
                    stmt.getConnection();
                    stmt.executeUpdate("use credito");

                    ResultSet rs3=stmt.executeQuery("Select * from ins");

                    ResultSetMetaData mD = rs3.getMetaData();
                    int ncol=mD.getColumnCount();
                    Object label [] = new Object [ncol];
                    for (int i=0;i<ncol;i++)
                    {
                        label[i]=mD.getColumnLabel(i+1);
                    }

                    DefaultTableModel modelo = (DefaultTableModel) tablaInsu.getModel();
                    modelo.setRowCount(0);
                    //modelo.setColumnIdentifiers(label);
                    while(rs3.next())
                    {
                        Object [] fila = new Object [ncol];
                        for (int i=0;i<ncol;i++)
                        {
                            fila[i]=rs3.getObject(i+1);
                        }
                        modelo.addRow(fila);
                    }
                }              
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null,"Error:"+e.getMessage());
                    e.printStackTrace();
                }
    }//GEN-LAST:event_formWindowActivated

    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
        // TODO add your handling code here:
        final javax.swing.SwingWorker worker;
        worker = new javax.swing.SwingWorker() {
            
            @Override
            protected Void doInBackground() throws Exception 
		{
                try
                {
//                    Thread.sleep(3000);
                    stmt=cone.conexion();
                    stmt.getConnection();
                    stmt.executeUpdate("use credito");

                    ResultSet rs8=stmt.executeQuery("Select * from labs");

                    ResultSetMetaData mD = rs8.getMetaData();
                    int ncol=mD.getColumnCount();
                    Object label [] = new Object [ncol];
                    for (int i=0;i<ncol;i++)
                    {
                        label[i]=mD.getColumnLabel(i+1);
                    }

                    DefaultTableModel modelo = (DefaultTableModel) tablaPaque.getModel();
                    modelo.setRowCount(0);
                    //modelo.setColumnIdentifiers(label);
                    while(rs8.next())
                    {
                        Object [] fila = new Object [ncol];
                        for (int i=0;i<ncol;i++)
                        {
                            fila[i]=rs8.getObject(i+1);
                        }
                        modelo.addRow(fila);
                    }
                }              
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null,"Error:"+e.getMessage());
                    e.printStackTrace();
                }
                
                try
                {
                    stmt=cone.conexion();
                    stmt.getConnection();
                    stmt.executeUpdate("use credito");

                    ResultSet rs3=stmt.executeQuery("Select * from ins");

                    ResultSetMetaData mD = rs3.getMetaData();
                    int ncol=mD.getColumnCount();
                    Object label [] = new Object [ncol];
                    for (int i=0;i<ncol;i++)
                    {
                        label[i]=mD.getColumnLabel(i+1);
                    }

                    DefaultTableModel modelo = (DefaultTableModel) tablaInsu.getModel();
                    modelo.setRowCount(0);
                    //modelo.setColumnIdentifiers(label);
                    while(rs3.next())
                    {
                        Object [] fila = new Object [ncol];
                        for (int i=0;i<ncol;i++)
                        {
                            fila[i]=rs3.getObject(i+1);
                        }
                        modelo.addRow(fila);
                    }
                }              
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null,"Error:"+e.getMessage());
                    e.printStackTrace();
                }
                    return null;
		}

            @Override
            protected void done() {

            }
        };
        worker.execute();
    }//GEN-LAST:event_formWindowIconified

    private void penFolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_penFolMouseClicked
        // TODO add your handling code here:
        String fol="";
        fol=penFol.getValueAt(penFol.getSelectedRow(),0).toString();
        
        try
                {
                    stmt=cone.conexion();
                    stmt.getConnection();
                    stmt.executeUpdate("use credito");

                    ResultSet rs3=stmt.executeQuery("Select produc,cant,estatus,feEmi,feEnt  from alertinsumos where folio='"+fol+"'");

                    ResultSetMetaData mD = rs3.getMetaData();
                    int ncol=mD.getColumnCount();
                    Object label [] = new Object [ncol];
                    for (int i=0;i<ncol;i++)
                    {
                        label[i]=mD.getColumnLabel(i+1);
                    }

                    DefaultTableModel modelo = (DefaultTableModel) penDet.getModel();
                    modelo.setRowCount(0);
                    //modelo.setColumnIdentifiers(label);
                    while(rs3.next())
                    {
                        Object [] fila = new Object [ncol];
                        for (int i=0;i<ncol;i++)
                        {
                            fila[i]=rs3.getObject(i+1);
                        }
                        modelo.addRow(fila);
                    }
                }              
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null,"Error:"+e.getMessage());
                    e.printStackTrace();
                }
    }//GEN-LAST:event_penFolMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String fol="";
        fol=penFol.getValueAt(penFol.getSelectedRow(),0).toString();
        
        try
        {
            stmt=cone.conexion();
            stmt.getConnection();
            stmt.executeUpdate("update alertinsumos set estatus='ENTREGADO', feEnt=now() where folio='"+fol+"'");
            JOptionPane.showMessageDialog(null,"Folio "+fol+" Entregado.","inventario",JOptionPane.INFORMATION_MESSAGE);
            
            //CONSULTO LOS POSIBLES FOLIOS PÉNDIENTES
                try
                {
                    stmt=cone.conexion();
                    stmt.getConnection();
                    stmt.executeUpdate("use credito");

                    ResultSet rs3=stmt.executeQuery("Select folio,nombre from alertinsumos where estatus='PENDIENTE' group by folio");

                    ResultSetMetaData mD = rs3.getMetaData();
                    int ncol=mD.getColumnCount();
                    Object label [] = new Object [ncol];
                    for (int i=0;i<ncol;i++)
                    {
                        label[i]=mD.getColumnLabel(i+1);
                    }

                    DefaultTableModel modelo = (DefaultTableModel) penFol.getModel();
                    modelo.setRowCount(0);
                    //modelo.setColumnIdentifiers(label);
                    while(rs3.next())
                    {
                        Object [] fila = new Object [ncol];
                        for (int i=0;i<ncol;i++)
                        {
                            fila[i]=rs3.getObject(i+1);
                        }
                        modelo.addRow(fila);
                    }
                }              
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null,"Error:"+e.getMessage());
                    e.printStackTrace();
                }
        }
        catch(Exception e)
        {
            System.out.println("Error:"+e.getMessage());
        }
        try
                {
                    stmt=cone.conexion();
                    stmt.getConnection();
                    stmt.executeUpdate("use credito");

                    ResultSet rs3=stmt.executeQuery("Select produc,cant,estatus,feEmi,feEnt  from alertinsumos where folio='asdf'");

                    ResultSetMetaData mD = rs3.getMetaData();
                    int ncol=mD.getColumnCount();
                    Object label [] = new Object [ncol];
                    for (int i=0;i<ncol;i++)
                    {
                        label[i]=mD.getColumnLabel(i+1);
                    }

                    DefaultTableModel modelo = (DefaultTableModel) penDet.getModel();
                    modelo.setRowCount(0);
                    //modelo.setColumnIdentifiers(label);
                    while(rs3.next())
                    {
                        Object [] fila = new Object [ncol];
                        for (int i=0;i<ncol;i++)
                        {
                            fila[i]=rs3.getObject(i+1);
                        }
                        modelo.addRow(fila);
                    }
                }              
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null,"Error:"+e.getMessage());
                    e.printStackTrace();
                }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void folioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_folioKeyTyped
        // TODO add your handling code here:
         try
        {
            stmt=cone.conexion();
            stmt.getConnection();
            stmt.executeUpdate("use credito");
            ResultSet rs=stmt.executeQuery("Select * from alertinsumos"
                    + " where folio like '%"+folio.getText()+"%'");

            ResultSetMetaData mD = rs.getMetaData();
            int ncol=mD.getColumnCount();
            Object label [] = new Object [ncol];
            for (int i=0;i<ncol;i++)
            {
                label[i]=mD.getColumnLabel(i+1);
            }

            DefaultTableModel modelo = (DefaultTableModel) historial.getModel();
            modelo.setRowCount(0);
            //modelo.setColumnIdentifiers(label);
            while(rs.next())
            {
                Object [] fila = new Object [ncol];
                for (int i=0;i<ncol;i++)
                {
                    fila[i]=rs.getObject(i+1);
                }
                modelo.addRow(fila);
            }
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error:"+e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_folioKeyTyped

    private void nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreKeyTyped
        // TODO add your handling code here:try
        try
        {
            stmt=cone.conexion();
            stmt.getConnection();
            stmt.executeUpdate("use credito");
            ResultSet rs=stmt.executeQuery("Select * from alertinsumos"
                    + " where nombre like '%"+nombre.getText()+"%'");

            ResultSetMetaData mD = rs.getMetaData();
            int ncol=mD.getColumnCount();
            Object label [] = new Object [ncol];
            for (int i=0;i<ncol;i++)
            {
                label[i]=mD.getColumnLabel(i+1);
            }

            DefaultTableModel modelo = (DefaultTableModel) historial.getModel();
            modelo.setRowCount(0);
            //modelo.setColumnIdentifiers(label);
            while(rs.next())
            {
                Object [] fila = new Object [ncol];
                for (int i=0;i<ncol;i++)
                {
                    fila[i]=rs.getObject(i+1);
                }
                modelo.addRow(fila);
            }
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error:"+e.getMessage());
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_nombreKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Inventario  cred = new Inventario();
                cred.setExtendedState(MAXIMIZED_BOTH);
                cred.setVisible(true);
//                cred.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField folio;
    private javax.swing.JTable historial;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField nombre;
    private javax.swing.JTable penDet;
    private javax.swing.JTable penFol;
    private javax.swing.JMenuItem pop;
    private javax.swing.JTable tablaInsu;
    private javax.swing.JTable tablaPaque;
    // End of variables declaration//GEN-END:variables
}
